<?xml version="1.0" encoding="utf-8"?>
<script><![CDATA[
<!doctype html>
<!--
	Copyright (c) 2019. Daniel Patterson (danielanywhere)
	Released for public access under the MIT License.
	http://www.opensource.org/licenses/mit-license.php
-->
<html xmlns="http://www.w3.org/1999/xhtml">
<!--
	In this MVVM version, the view model layers are implicit.
	- All HTML is declarative, and defines the VIEW.
	- All JavaScript logic composes the VIEW MODEL.
	- All JSON tables constitute the MODEL.

	This file demonstrates a customized version of jsGrid.js that has several
	improvements by Daniel Patterson.

	This file demonstrates that the implementation of jsGrid is much smaller and
	easier to implement than an equal usage of Telerik Kendo grid.
	The original version of jsGrid can be found at:
 https://github.com/tabalinas/jsgrid
-->
<head>
	<title>BankCore featuring jQuery, jsGrid, ASP.NET, and REST</title>
	<!-- Base formatting. -->
	<meta charset="utf-8" />
	<link rel="stylesheet" type="text/css" href="Default.css" />
	<link rel="stylesheet" type="text/css" href="scripts/jsgridmod/jsgrid.css" />
	<link rel="stylesheet" type="text/css" href="scripts/jsgridmod/jsgrid-theme.css" />
	<link rel="stylesheet" type="text/css" href="scripts/jquery-ui-1.12.1.d1/jquery-ui.css" />
	<script src="scripts/jquery-3.3.1.js"></script>
	<script src="scripts/jquery-ui-1.12.1.d1/jquery-ui.js"></script>
	<script src="scripts/jquery.validate.1.9.min.js"></script>
	<script src="scripts/jsgridmod/jsgrid.js"></script>
	<script src="scripts/IndexViewModel.js"></script>
</head>
<body>
	<div id="tabs">
	<!-- Tab Control -->
	<ul>
]]>
	<loop name="a" level="component"><![CDATA[
		<li><a href="#{Items}"><span>{Items}</span></a></li>]]>
	</loop><![CDATA[
	</ul>
	<!-- /Tab Control -->]]>
	<loop name="b" level="component"><![CDATA[
	<!-- {Items} Panel. -->
	<div id="{Items}">
		<p class="top0">Select {AAn} {LItem} to edit or view.</p>
		<div id="grd{Items}" class="jsGrid"></div>
		<!-- {Item} Filtering -->
		<div class="tabAccordian">
			<h3>Row Filter Settings</h3>
			<div id="filt{Items}" class="rowFilter">
				<div class="head">Row Filtering</div>
				<p class="small">Enter all or part of a value to look for in each desired column.</p>
]]>
				<loop name="c" level="entry">
				<condition name="d" variablename="FieldDataType" match="[Guid,string]"><![CDATA[
				<label class="container">{FieldDisplayName}:
					<input type="text" id="txtfilt{LAbbrev3}{FieldName}">
				</label>
]]>
				</condition>
				<condition name="e" variablename="FieldDataType" match="[DateTime,decimal,int]"><![CDATA[
				<label class="container">{FieldDisplayName} (Min):
					<input type="text" id="txtfilt{LAbbrev3}{FieldName}.Min">
				</label>
				<label class="container">{FieldDisplayName} (Max):
					<input type="text" id="txtfilt{LAbbrev3}{FieldName}.Max">
				</label>
]]>
				</condition>
				</loop><![CDATA[
				<input type="button" id="btnfilt{LAbbrev3}Apply" value="Apply Filter">
				<input type="button" id="btnfilt{LAbbrev3}Clear" value="Clear Values">
			</div>
		</div>
		<!-- /{Item} Filtering -->
		<!-- {Item} Column Visibility -->
		<div class="tabAccordian">
			<h3>Column Settings</h3>
			<div id="colctl{Items}" class="columnVisibility">
				<div class="head">Column Visibility</div>]]>
				<loop name="f" level="entry"><![CDATA[
				<label class="container">{FieldDisplayName}
					<input type="checkbox"" checked="checked"
						id="chkcolctl{LAbbrev3}{FieldName}">
					<span class="checkmark"></span>
				</label>]]>
				</loop><![CDATA[
			</div>
		</div>
		<!-- /{Item} Column Visibility -->
	</div>
	<!-- /{Items} Panel. -->]]>
	</loop><![CDATA[
</body>
</html>]]>
</script>

